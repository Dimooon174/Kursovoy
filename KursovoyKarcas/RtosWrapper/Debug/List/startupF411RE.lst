###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         27/May/2021  17:34:22
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =
#        C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\startupF411RE.cpp
#    Command line =
#        -f C:\Users\super\AppData\Local\Temp\EWB181.tmp ("C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\startupF411RE.cpp" -lC "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Debug\List" -lA "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Debug\List" -o "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config D:\Games\IAR\arm\inc\c\DLib_Config_Normal.h -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\wrapper\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\wrapper\FreeRtos\" -I
#        "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\" -I
#        "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\include\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\portable\" -I
#        "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\portable\Common\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\portable\IAR\" -I
#        "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\portable\IAR\ARM_CM4F\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Rtos\FreeRtos\portable\MemMang\"
#        -I "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\MyTasks\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Common\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\CMSIS\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Application\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Application\Diagnostic\" -I
#        "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\GpioPort\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\IrqController\" -I
#        "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Pin\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Registers\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Port\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\AbstractHardware\Atomic\"
#        -I "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\Common\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\Common\Singleton\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\..\CortexLib\Common\RomObject\"
#        -I "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\USART\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Common\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\Registers\" -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\Registers\STM32F411\FieldValues\"
#        -I "C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\Registers\STM32F411\"
#        -I "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\SPI\" -I
#        "C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\AHardware\BME280Driver\"
#        -Ol --c++ --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =
#        C:\IAR
#        Proj\NEW6\KursovoyKarcas\RtosWrapper\Debug\List\startupF411RE.lst
#    Object file  =
#        C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\Debug\Obj\startupF411RE.o
#
###############################################################################

C:\IAR Proj\NEW6\KursovoyKarcas\RtosWrapper\startupF411RE.cpp
      1          /******************************************************************************
      2           *  FILENAME: startupF411RE.cpp
      3           *  
      4           * DESCRIPTION: Файл с векторами прерывания для Cortex-M. для С++.
      5           * Поскольку почему-то в Cortex-M все обработчики должны по имени точно 
      6           *  совпадать с имена в таблице векторов, а название метода из С++ класса 
      7           * совпасть с такой таблицей со стандратными стартап файлами никак не может
      8           * то вот приходиться такой же писать на С++. 
      9           * Внимание!!!!!! Имена классов точно должны совпадать с именами у вас в проекте
     10           * Можно изменить и сократить количество классов, если есть желание, например
     11           *
     12           * Copyright (c) 2018 by South Ural State University
     13           * Author: Сергей Колодий
     14           ******************************************************************************/
     15          
     16          #pragma language = extended
     17          #pragma segment = "CSTACK"
     18          #include "AHardware/IrqController/irqcontroller.hpp"
     19          #include "Rtos/wrapper/rtos.hpp"

   \                                 In section .text, align 2
   \   __interwork __vfp uint8_t & std::array<uint8_t, 255U>::operator[](size_t)
   \                     _ZNSt5arrayIhLj255EEixEj: (+1)
   \        0x0   0x4408             ADD      R0,R0,R1
   \        0x2   0x4770             BX       LR               ;; return

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_steady
   \                     _ZNSt6chrono12system_clock9is_steadyE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_monotonic
   \                     _ZNSt6chrono12system_clock12is_monotonicE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::steady_clock::is_steady
   \                     _ZNSt6chrono12steady_clock9is_steadyE:
   \        0x0   0x01               DC8 1

   \                                 In section .text, align 2
   \   __interwork __vfp void OsWrapper::RtosWrapper::wHandleSvcInterrupt()
   \                     _ZN9OsWrapper11RtosWrapper19wHandleSvcInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       vPortSVCHandler
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
   \                     _ZN9OsWrapper11RtosWrapper23wHandleSysTickInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       xPortSysTickHandler
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void OsWrapper::Rtos::HandleSvcInterrupt()
   \                     _ZN9OsWrapper4Rtos18HandleSvcInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN9OsWrapper11RtosWrapper19wHandleSvcInterruptEv
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void OsWrapper::Rtos::HandleSysTickInterrupt()
   \                     _ZN9OsWrapper4Rtos22HandleSysTickInterruptEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN9OsWrapper11RtosWrapper23wHandleSysTickInterruptEv
   \        0x6   0xBD01             POP      {R0,PC}          ;; return
     20          #include "UsartConfig.hpp"

   \                                 In section .text, align 4
   \   __interwork __vfp void FieldValueBase<USART2_CR1_RE_Values<USART2::CR1, 2U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
   \                     _ZN14FieldValueBaseI20USART2_CR1_RE_ValuesIN6USART23CR1ELj2ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj0EE3SetIS3_vEEvv: (+1)
   \        0x0   0x4902             LDR.N    R1,??Set_0       ;; 0x4000440c
   \        0x2   0x6808             LDR      R0,[R1, #+0]
   \        0x4   0xF030 0x0004      BICS     R0,R0,#0x4
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0x4770             BX       LR               ;; return
   \                     ??Set_0:
   \        0xC   0x4000'440C        DC32     0x4000440c

   \                                 In section .text, align 4
   \   __interwork __vfp void FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
   \                     _ZN14FieldValueBaseI23USART2_CR1_TXEIE_ValuesIN6USART23CR1ELj7ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj0EE3SetIS3_vEEvv: (+1)
   \        0x0   0x4902             LDR.N    R1,??Set_1       ;; 0x4000440c
   \        0x2   0x6808             LDR      R0,[R1, #+0]
   \        0x4   0xF030 0x0080      BICS     R0,R0,#0x80
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0x4770             BX       LR               ;; return
   \                     ??Set_1:
   \        0xC   0x4000'440C        DC32     0x4000440c

   \                                 In section .text, align 4
   \   __interwork __vfp bool FieldValueBase<USART2_SR_TXE_Values<USART2::SR, 7U, 1U, ReadMode, USART2::USART2SRBase>, USART2::USART2SRBase, 1U>::IsSet<ReadMode, void>()
   \                     _ZN14FieldValueBaseI20USART2_SR_TXE_ValuesIN6USART22SRELj7ELj1E8ReadModeNS1_12USART2SRBaseEES4_Lj1EE5IsSetIS3_vEEbv: (+1)
   \        0x0   0x4802             LDR.N    R0,??IsSet_0     ;; 0x40004400
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x09C0             LSRS     R0,R0,#+7
   \        0x6   0xF010 0x0001      ANDS     R0,R0,#0x1
   \        0xA   0x4770             BX       LR               ;; return
   \                     ??IsSet_0:
   \        0xC   0x4000'4400        DC32     0x40004400

   \                                 In section .text, align 4
   \   __interwork __vfp bool FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 1U>::IsSet<ReadWriteMode, void>()
   \                     _ZN14FieldValueBaseI23USART2_CR1_TXEIE_ValuesIN6USART23CR1ELj7ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj1EE5IsSetIS3_vEEbv: (+1)
   \        0x0   0x4802             LDR.N    R0,??IsSet_1     ;; 0x4000440c
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x09C0             LSRS     R0,R0,#+7
   \        0x6   0xF010 0x0001      ANDS     R0,R0,#0x1
   \        0xA   0x4770             BX       LR               ;; return
   \                     ??IsSet_1:
   \        0xC   0x4000'440C        DC32     0x4000440c

   \                                 In section .text, align 4
   \   __interwork __vfp void RegisterBase<1073759236U, 32U, ReadWriteMode>::Write<ReadWriteMode, void>(uint32_t)
   \                     _ZN12RegisterBaseILj1073759236ELj32E13ReadWriteModeE5WriteIS0_vEEvj: (+1)
   \        0x0   0x4901             LDR.N    R1,??Write_0     ;; 0x40004404
   \        0x2   0x6008             STR      R0,[R1, #+0]
   \        0x4   0x4770             BX       LR               ;; return
   \        0x6   0xBF00             Nop      
   \                     ??Write_0:
   \        0x8   0x4000'4404        DC32     0x40004404

   \                                 In section .text, align 2
   \   __code __interwork __vfp UsartDriver<Usart2>::UsartDriver()
   \                     _ZN11UsartDriverI6Usart2EC1Ev: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x7001             STRB     R1,[R0, #+0]
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0xF8C0 0x1100      STR      R1,[R0, #+256]
   \        0xA   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void UsartDriver<Usart2>::OnNextByteTransmit()
   \                     _ZN11UsartDriverI6Usart2E18OnNextByteTransmitEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x7821             LDRB     R1,[R4, #+0]
   \        0x6   0x1C48             ADDS     R0,R1,#+1
   \        0x8   0x7020             STRB     R0,[R4, #+0]
   \        0xA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0xC   0x1C60             ADDS     R0,R4,#+1
   \        0xE   0x....'....        BL       _ZNSt5arrayIhLj255EEixEj
   \       0x12   0x7800             LDRB     R0,[R0, #+0]
   \       0x14   0x....'....        BL       _ZN5USARTI6USART2L_Z11usartDriverEE9WriteByteEh
   \       0x18   0x7820             LDRB     R0,[R4, #+0]
   \       0x1A   0xF8D4 0x1100      LDR      R1,[R4, #+256]
   \       0x1E   0x4288             CMP      R0,R1
   \       0x20   0xD305             BCC.N    ??OnNextByteTransmit_0
   \       0x22   0x....'....        BL       _ZN5USARTI6USART2L_Z11usartDriverEE15TransmitDisableEv
   \       0x26   0x....'....        BL       _ZN5USARTI6USART2L_Z11usartDriverEE16InterruptDisableEv
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x7020             STRB     R0,[R4, #+0]
   \                     ??OnNextByteTransmit_0: (+1)
   \       0x2E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void USART<USART2, usartDriver>::WriteByte(uint8_t)
   \                     _ZN5USARTI6USART2L_Z11usartDriverEE9WriteByteEh: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \        0x4   0x....'....        BL       _ZN12RegisterBaseILj1073759236ELj32E13ReadWriteModeE5WriteIS0_vEEvj
   \        0x8   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4
   \   __interwork __vfp void USART<USART2, usartDriver>::InterruptHandler()
   \                     _ZN5USARTI6USART2L_Z11usartDriverEE16InterruptHandlerEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN14FieldValueBaseI20USART2_SR_TXE_ValuesIN6USART22SRELj7ELj1E8ReadModeNS1_12USART2SRBaseEES4_Lj1EE5IsSetIS3_vEEbv
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD006             BEQ.N    ??InterruptHandler_1
   \        0xA   0x....'....        BL       _ZN14FieldValueBaseI23USART2_CR1_TXEIE_ValuesIN6USART23CR1ELj7ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj1EE5IsSetIS3_vEEbv
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD002             BEQ.N    ??InterruptHandler_1
   \       0x12   0x4802             LDR.N    R0,??InterruptHandler_0
   \       0x14   0x....'....        BL       _ZN11UsartDriverI6Usart2E18OnNextByteTransmitEv
   \                     ??InterruptHandler_1: (+1)
   \       0x18   0xBD01             POP      {R0,PC}          ;; return
   \       0x1A   0xBF00             Nop      
   \                     ??InterruptHandler_0:
   \       0x1C   0x....'....        DC32     usartDriver

   \                                 In section .text, align 2
   \   __interwork __vfp void USART<USART2, usartDriver>::InterruptDisable()
   \                     _ZN5USARTI6USART2L_Z11usartDriverEE16InterruptDisableEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN14FieldValueBaseI23USART2_CR1_TXEIE_ValuesIN6USART23CR1ELj7ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj0EE3SetIS3_vEEvv
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp void USART<USART2, usartDriver>::TransmitDisable()
   \                     _ZN5USARTI6USART2L_Z11usartDriverEE15TransmitDisableEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN14FieldValueBaseI20USART2_CR1_RE_ValuesIN6USART23CR1ELj2ELj1E13ReadWriteModeNS1_13USART2CR1BaseEES4_Lj0EE3SetIS3_vEEvv
   \        0x6   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __vfp void __sti__routine()
   \                     __sti__routine: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....             LDR.N    R1,??DataTable0
   \        0x4   0x7808             LDRB     R0,[R1, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD104             BNE.N    ??__sti__routine_0
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x7008             STRB     R0,[R1, #+0]
   \        0xE   0x....             LDR.N    R0,??DataTable0_1
   \       0x10   0x....'....        BL       _ZN11UsartDriverI6Usart2EC1Ev
   \                     ??__sti__routine_0: (+1)
   \       0x14   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \   __absolute UsartDriver<Usart2> usartDriver
   \                     usartDriver:
   \        0x0                      DS8 260
     21          extern "C" void __iar_program_start( void );
     22          extern "C" void xPortPendSVHandler(void);
     23          
     24          class UART
     25          {
     26          public:

   \                                 In section .text, align 2
     27            static void interruptHandler()
     28            {
   \                     _ZN4UART16interruptHandlerEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     29              Usart2::InterruptHandler();
   \        0x2   0x....'....        BL       _ZN5USARTI6USART2L_Z11usartDriverEE16InterruptHandlerEv
     30            }
   \        0x6   0xBD01             POP      {R0,PC}          ;; return
     31          };
     32          class DummyModule
     33          {
     34            public:
     35              static void handler();
     36          };
     37          
     38          using tIntFunct = void(*)();
     39          //cstat !MISRAC++2008-9-5-1
     40          using tIntVectItem = union {tIntFunct __fun; void * __ptr;};
     41          
     42          // The vector table is normally located at address 0.
     43          // When debugging in RAM, it can be located in RAM, aligned to at least 2^6.
     44          // If you need to define interrupt service routines,
     45          // make a copy of this file and include it in your project.
     46          // The name "__vector_table" has special meaning for C-SPY:
     47          // it is where the SP start value is found, and the NVIC vector
     48          // table register (VTOR) is initialized to this address if != 0.
     49          
     50          #pragma location = ".intvec"
     51          //cstat !MISRAC++2008-0-1-4_b !MISRAC++2008-9-5-1

   \                                 In section .intvec, align 4
     52          extern "C" const tIntVectItem __vector_table[] =
   \                     __vector_table:
   \        0x0   0x....'....        DC32 SFE(CSTACK), __iar_program_start, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \              0x....'....  
   \        0xC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x14   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \       0x24   0x0000'0000        DC32 0x0, 0x0, _ZN9OsWrapper4Rtos18HandleSvcInterruptEv
   \              0x0000'0000  
   \              0x....'....  
   \       0x30   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, xPortPendSVHandler
   \              0x0000'0000  
   \              0x....'....  
   \       0x3C   0x....'....        DC32 _ZN9OsWrapper4Rtos22HandleSysTickInterruptEv
   \       0x40   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x48   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x50   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x58   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x60   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x68   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x70   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x78   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x80   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0x88   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \       0x9C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xA4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xAC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN13IrqController13HandleIrqTim2Ev
   \              0x....'....  
   \       0xB4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xBC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xC4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xCC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \       0xD4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN4UART16interruptHandlerEv, 0x0
   \              0x....'....  
   \              0x0000'0000  
   \       0xE0   0x....'....        DC32 _ZN13IrqController22HandleIrqExtiLine15_10Ev
   \       0xE4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \       0xF4   0x0000'0000        DC32 0x0, 0x0, _ZN11DummyModule7handlerEv, 0x0
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0000  
   \      0x104   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x10C   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \      0x120   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x128   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x130   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \      0x14C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x154   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x15C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv
   \              0x....'....  
   \      0x164   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   \      0x184   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, _ZN11DummyModule7handlerEv
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x....'....  
   \      0x194   0x....'....        DC32 _ZN11DummyModule7handlerEv
     53          {
     54            { .__ptr = __sfe( "CSTACK" ) },
     55            __iar_program_start,
     56          
     57            DummyModule::handler,
     58            DummyModule::handler,
     59            DummyModule::handler,
     60            DummyModule::handler,
     61            DummyModule::handler,
     62            0,
     63            0,
     64            0,
     65            0,
     66            OsWrapper::Rtos::HandleSvcInterrupt,
     67            DummyModule::handler,
     68            0,
     69            xPortPendSVHandler,
     70            OsWrapper::Rtos::HandleSysTickInterrupt,
     71            //External Interrupts
     72            DummyModule::handler,         //Window Watchdog
     73            DummyModule::handler,         //PVD through EXTI Line detect/EXTI16
     74            DummyModule::handler,         //Tamper and Time Stamp/EXTI21 
     75            DummyModule::handler,         //RTC Wakeup/EXTI22 
     76            DummyModule::handler,         //FLASH
     77            DummyModule::handler,         //RCC
     78            DummyModule::handler,         //EXTI Line 0
     79            DummyModule::handler,         //EXTI Line 1
     80            DummyModule::handler,         //EXTI Line 2
     81            DummyModule::handler,         //EXTI Line 3
     82            DummyModule::handler,         //EXTI Line 4
     83            DummyModule::handler,         //DMA1 Stream 0
     84            DummyModule::handler,         //DMA1 Stream 1
     85            DummyModule::handler,         //DMA1 Stream 2
     86            DummyModule::handler,         //DMA1 Stream 3
     87            DummyModule::handler,         //DMA1 Stream 4
     88            DummyModule::handler,         //DMA1 Stream 5
     89            DummyModule::handler,         //DMA1 Stream 6
     90            DummyModule::handler,         //ADC1
     91            0,                            //USB High Priority
     92            0,                            //USB Low  Priority
     93            0,                            //DAC
     94            0,                            //COMP through EXTI Line
     95            DummyModule::handler,         //EXTI Line 9..5
     96            DummyModule::handler,         //TIM9/TIM1 Break interrupt 
     97            DummyModule::handler,         //TIM10/TIM1 Update interrupt
     98            DummyModule::handler,         //TIM11/TIM1 Trigger/Commutation interrupts
     99            DummyModule::handler,		//TIM1 Capture Compare interrupt
    100            IrqController::HandleIrqTim2,         //TIM2  	
    101            DummyModule::handler,         //TIM3
    102            DummyModule::handler,         //TIM4
    103            DummyModule::handler,         //I2C1 Event
    104            DummyModule::handler,         //I2C1 Error
    105            DummyModule::handler,         //I2C2 Event
    106            DummyModule::handler,         //I2C2 Error
    107            DummyModule::handler,         //SPI1
    108            DummyModule::handler,         //SPI2
    109            DummyModule::handler,         //USART1
    110            UART::interruptHandler,         //USART2
    111            0,
    112            IrqController::HandleIrqExtiLine15_10,         //EXTI Line 15..10
    113            DummyModule::handler,         //EXTI Line 17 interrupt / RTC Alarms (A and B) through EXTI line interrupt
    114            DummyModule::handler,         //EXTI Line 18 interrupt / USB On-The-Go  FS Wakeup through EXTI line interrupt
    115            0,				//TIM6
    116            0,				//TIM7  f0
    117            0,
    118            0,
    119            DummyModule::handler,         //DMA1 Stream 7 global interrupt fc
    120            0,
    121            DummyModule::handler,	        //SDIO global interrupt
    122            DummyModule::handler,	        //TIM5 global interrupt
    123            DummyModule::handler,	        //SPI3 global interrupt
    124            0,			        // 110
    125            0,
    126            0,
    127            0,
    128            DummyModule::handler,		//DMA2 Stream0 global interrupt 120
    129            DummyModule::handler,		//DMA2 Stream1 global interrupt
    130            DummyModule::handler,		//DMA2 Stream2 global interrupt
    131            DummyModule::handler,		//DMA2 Stream3 global interrupt
    132            DummyModule::handler,		//DMA2 Stream4 global interrupt 130
    133            0,
    134            0,
    135            0,
    136            0,
    137            0,
    138            0,
    139            DummyModule::handler,		//USB On The Go FS global interrupt, 14C
    140            DummyModule::handler,		//DMA2 Stream5 global interrupt
    141            DummyModule::handler,		//DMA2 Stream6 global interrupt
    142            DummyModule::handler,		//DMA2 Stream7 global interrupt
    143            DummyModule::handler,				//USART6 15C
    144            DummyModule::handler,         //I2C3 Event
    145            DummyModule::handler,         //I2C3 Error 164
    146            0,
    147            0,
    148            0,
    149            0,
    150            0,
    151            0,
    152            0,
    153            DummyModule::handler,		//FPU 184
    154            0,
    155            0,
    156            DummyModule::handler,		//SPI 4 global interrupt
    157            DummyModule::handler		//SPI 5 global interrupt
    158          };
    159          

   \                                 In section .text, align 2, keep-with-next
    160          void DummyModule::handler()   { for(;;) {} } ;
   \                     _ZN11DummyModule7handlerEv: (+1)
   \                     ??handler_0: (+1)
   \        0x0   0xE7FE             B.N      ??handler_0
    161          
    162          extern "C" void __cmain( void );
    163          extern "C" __weak void __iar_init_core( void );
    164          extern "C" __weak void __iar_init_vfp( void );
    165          
    166          #pragma required=__vector_table

   \                                 In section .text, align 2, keep-with-next
    167          void __iar_program_start( void )
    168          {
   \                     __iar_program_start: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    169            __iar_init_core();
   \        0x2   0x....'....        BL       __iar_init_core
    170            __iar_init_vfp();
   \        0x6   0x....'....        BL       __iar_init_vfp
    171            __cmain();
   \        0xA   0x....'....        BL       __cmain
    172          }
   \        0xE   0xBD01             POP      {R0,PC}          ;; return
   \       0x10                      REQUIRE __vector_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \        0x0   0x....'....        DC32     _ZGV11usartDriver

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \        0x0   0x....'....        DC32     usartDriver
    173          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DummyModule::handler()
       0   FieldValueBase<USART2_CR1_RE_Values<USART2::CR1, 2U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
       0   FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
       0   FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 1U>::IsSet<ReadWriteMode, void>()
       0   FieldValueBase<USART2_SR_TXE_Values<USART2::SR, 7U, 1U, ReadMode, USART2::USART2SRBase>, USART2::USART2SRBase, 1U>::IsSet<ReadMode, void>()
       8   OsWrapper::Rtos::HandleSvcInterrupt()
         8   -> OsWrapper::RtosWrapper::wHandleSvcInterrupt()
       8   OsWrapper::Rtos::HandleSysTickInterrupt()
         8   -> OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
       8   OsWrapper::RtosWrapper::wHandleSvcInterrupt()
         8   -> OsWrapper::vPortSVCHandler
       8   OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
         8   -> OsWrapper::xPortSysTickHandler
       0   RegisterBase<1073759236U, 32U, ReadWriteMode>::Write<ReadWriteMode, void>(uint32_t)
       8   UART::interruptHandler()
         8   -> USART<USART2, usartDriver>::InterruptHandler()
       8   USART<USART2, usartDriver>::InterruptDisable()
         8   -> FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
       8   USART<USART2, usartDriver>::InterruptHandler()
         8   -> FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 1U>::IsSet<ReadWriteMode, void>()
         8   -> FieldValueBase<USART2_SR_TXE_Values<USART2::SR, 7U, 1U, ReadMode, USART2::USART2SRBase>, USART2::USART2SRBase, 1U>::IsSet<ReadMode, void>()
         8   -> UsartDriver<Usart2>::OnNextByteTransmit()
       8   USART<USART2, usartDriver>::TransmitDisable()
         8   -> FieldValueBase<USART2_CR1_RE_Values<USART2::CR1, 2U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
       8   USART<USART2, usartDriver>::WriteByte(uint8_t)
         8   -> RegisterBase<1073759236U, 32U, ReadWriteMode>::Write<ReadWriteMode, void>(uint32_t)
       8   UsartDriver<Usart2>::OnNextByteTransmit()
         8   -> USART<USART2, usartDriver>::InterruptDisable()
         8   -> USART<USART2, usartDriver>::TransmitDisable()
         8   -> USART<USART2, usartDriver>::WriteByte(uint8_t)
         8   -> std::array<uint8_t, 255U>::operator[](size_t)
       0   UsartDriver<Usart2>::UsartDriver()
       8   __iar_program_start
         8   -> __cmain
         8   -> __iar_init_core
         8   -> __iar_init_vfp
       8   __sti__routine()
         8   -> UsartDriver<Usart2>::UsartDriver()
       0   std::array<uint8_t, 255U>::operator[](size_t)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       2  DummyModule::handler()
      16  FieldValueBase<USART2_CR1_RE_Values<USART2::CR1, 2U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
      16  FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 0U>::Set<ReadWriteMode, void>()
      16  FieldValueBase<USART2_CR1_TXEIE_Values<USART2::CR1, 7U, 1U, ReadWriteMode, USART2::USART2CR1Base>, USART2::USART2CR1Base, 1U>::IsSet<ReadWriteMode, void>()
      16  FieldValueBase<USART2_SR_TXE_Values<USART2::SR, 7U, 1U, ReadMode, USART2::USART2SRBase>, USART2::USART2SRBase, 1U>::IsSet<ReadMode, void>()
       8  OsWrapper::Rtos::HandleSvcInterrupt()
       8  OsWrapper::Rtos::HandleSysTickInterrupt()
       8  OsWrapper::RtosWrapper::wHandleSvcInterrupt()
       8  OsWrapper::RtosWrapper::wHandleSysTickInterrupt()
      12  RegisterBase<1073759236U, 32U, ReadWriteMode>::Write<ReadWriteMode, void>(uint32_t)
       8  UART::interruptHandler()
       8  USART<USART2, usartDriver>::InterruptDisable()
      32  USART<USART2, usartDriver>::InterruptHandler()
       8  USART<USART2, usartDriver>::TransmitDisable()
      10  USART<USART2, usartDriver>::WriteByte(uint8_t)
      48  UsartDriver<Usart2>::OnNextByteTransmit()
      12  UsartDriver<Usart2>::UsartDriver()
      16  __iar_program_start
      22  __sti__routine()
     408  __vector_table
       4  std::array<uint8_t, 255U>::operator[](size_t)
       1  std::chrono::steady_clock::is_steady
       1  std::chrono::system_clock::is_monotonic
       1  std::chrono::system_clock::is_steady
     260  usartDriver
      29  -- Other

 
 261 bytes in section .bss
   4 bytes in section .init_array
 408 bytes in section .intvec
  27 bytes in section .rodata
 286 bytes in section .text
 
  52 bytes of CODE  memory (+ 238 bytes shared)
 408 bytes of CONST memory (+  27 bytes shared)
   0 bytes of DATA  memory (+ 261 bytes shared)

Errors: none
Warnings: none
